#ifndef _LEXER_BASE_
#define _LEXER_BASE_

#include <string>
#include <unordered_map>

namespace masm {

enum token_t {
  TOKEN_EOF,
  TOKEN_ERROR,
  TOKEN_IDENTIFIER,
  TOKEN_INTEGER,
  TOKEN_HEX,
  TOKEN_OCTAL,
  TOKEN_BINARY,
  TOKEN_FLOAT,
  TOKEN_STRING,
  TOKEN_COLON,
  TOKEN_INCLUDE,
  TOKEN_DEFINE,
  TOKEN_DB,
  TOKEN_DW,
  TOKEN_DD,
  TOKEN_DQ,
  TOKEN_DF,
  TOKEN_DS,
  TOKEN_DLF,
  TOKEN_RESB,
  TOKEN_RESW,
  TOKEN_RESD,
  TOKEN_RESF,
  TOKEN_RESQ,
  TOKEN_RESLF,

  // Registers
  // GPC
  R0,
  R1,
  R2,
  R3,
  R4,
  R5,
  R6,
  R7,
  R8,
  R9,
  R10,
  R11,
  R12,
  SP,
  BP,
  ACC,

  // Instructions
  // GPC
  TOKEN_NOP,
  TOKEN_HALT,
  TOKEN_ADD,
  TOKEN_SUB,
  TOKEN_MUL,
  TOKEN_DIV,
  TOKEN_MOD,
  TOKEN_IADD,
  TOKEN_ISUB,
  TOKEN_IMUL,
  TOKEN_IDIV,
  TOKEN_IMOD,
  TOKEN_FADD,
  TOKEN_FSUB,
  TOKEN_FMUL,
  TOKEN_FDIV,
  TOKEN_FADD32,
  TOKEN_FSUB32,
  TOKEN_FMUL32,
  TOKEN_FDIV32,
  TOKEN_INC,
  TOKEN_DEC,
  TOKEN_MOV,
  TOKEN_MOVB,
  TOKEN_MOVW,
  TOKEN_MOVD,
  TOKEN_MOVQ,
  TOKEN_MOVF,
  TOKEN_MOVF32,
  TOKEN_MOVSXB,
  TOKEN_MOVSXW,
  TOKEN_MOVSXD,
  TOKEN_EXCGB,
  TOKEN_EXCGW,
  TOKEN_EXCGD,
  TOKEN_EXCGQ,
  TOKEN_MOVEB,
  TOKEN_MOVEW,
  TOKEN_MOVED,
  TOKEN_MOVEQ,
  TOKEN_MOVNZ,
  TOKEN_MOVZ,
  TOKEN_MOVNE,
  TOKEN_MOVE,
  TOKEN_MOVNC,
  TOKEN_MOVC,
  TOKEN_MOVNO,
  TOKEN_MOVO,
  TOKEN_MOVNN,
  TOKEN_MOVN,
  TOKEN_MOVNG,
  TOKEN_MOVG,
  TOKEN_MOVNS,
  TOKEN_MOVS,
  TOKEN_MOVGE,
  TOKEN_MOVSE,
  TOKEN_AND,
  TOKEN_OR,
  TOKEN_XOR,
  TOKEN_SHL,
  TOKEN_SHR,
  TOKEN_NOT,
  TOKEN_CMP,
  TOKEN_RET,
  TOKEN_RETNZ,
  TOKEN_RETZ,
  TOKEN_RETNE,
  TOKEN_RETE,
  TOKEN_RETNC,
  TOKEN_RETC,
  TOKEN_RETNO,
  TOKEN_RETO,
  TOKEN_RETNN,
  TOKEN_RETN,
  TOKEN_RETNG,
  TOKEN_RETG,
  TOKEN_RETNS,
  TOKEN_RETS,
  TOKEN_RETGE,
  TOKEN_RETSE,
  TOKEN_PUSHA,
  TOKEN_POPA,
  TOKEN_OUTR,
  TOKEN_UOUTR,
  TOKEN_CFLAGS,
  TOKEN_RESET,
  TOKEN_JMP,
  TOKEN_JNZ,
  TOKEN_JZ,
  TOKEN_JNE,
  TOKEN_JE,
  TOKEN_JNC,
  TOKEN_JC,
  TOKEN_JNO,
  TOKEN_JO,
  TOKEN_JNN,
  TOKEN_JN,
  TOKEN_JNG,
  TOKEN_JG,
  TOKEN_JNS,
  TOKEN_JS,
  TOKEN_JGE,
  TOKEN_JSE,
  TOKEN_INT,
  TOKEN_CALL,
  TOKEN_PUSHB,
  TOKEN_PUSHW,
  TOKEN_PUSHD,
  TOKEN_PUSHQ,
  TOKEN_PUSH,
  TOKEN_POPB,
  TOKEN_POPW,
  TOKEN_POPD,
  TOKEN_POPQ,
  TOKEN_LOOP,
  TOKEN_LOADSB,
  TOKEN_LOADSW,
  TOKEN_LOADSD,
  TOKEN_LOADSQ,
  TOKEN_STORESB,
  TOKEN_STORESW,
  TOKEN_STORESD,
  TOKEN_STORESQ,
  TOKEN_FCMP,
  TOKEN_FCMP32,
  TOKEN_CIN,
  TOKEN_COUT,
  TOKEN_SIN,
  TOKEN_SOUT,
  TOKEN_IN,
  TOKEN_OUT,
  TOKEN_INW,
  TOKEN_OUTW,
  TOKEN_IND,
  TOKEN_OUTD,
  TOKEN_INQ,
  TOKEN_OUTQ,
  TOKEN_UIN,
  TOKEN_UOUT,
  TOKEN_UINW,
  TOKEN_UOUTW,
  TOKEN_UIND,
  TOKEN_UOUTD,
  TOKEN_UINQ,
  TOKEN_UOUTQ,
  TOKEN_INF,
  TOKEN_OUTF,
  TOKEN_INF32,
  TOKEN_OUTF32,
  TOKEN_LOADB,
  TOKEN_LOADW,
  TOKEN_LOADD,
  TOKEN_LOADQ,
  TOKEN_STOREB,
  TOKEN_STOREW,
  TOKEN_STORED,
  TOKEN_STOREQ,
  TOKEN_WHDLR,
  TOKEN_LEA,
  TOKEN_CMPXCHG,
  TOKEN_ATM,
};

struct Token {
  token_t type;
  std::string value;
  size_t line;
};

static std::unordered_map<std::string, token_t> map = {
    {"r0", R0},
    {"r1", R1},
    {"r2", R2},
    {"r3", R3},
    {"r4", R4},
    {"r5", R5},
    {"r6", R6},
    {"r7", R7},
    {"r8", R8},
    {"r9", R9},
    {"r10", R10},
    {"r11", R11},
    {"r12", R12},
    {"sp", SP},
    {"bp", BP},
    {"acc", ACC},
    {"include", TOKEN_INCLUDE},
    {":", TOKEN_COLON},
    {"define", TOKEN_DEFINE},
    {"db", TOKEN_DB},
    {"dw", TOKEN_DW},
    {"dd", TOKEN_DD},
    {"dq", TOKEN_DQ},
    {"df", TOKEN_DF},
    {"ds", TOKEN_DS},
    {"df", TOKEN_DF},
    {"dlf", TOKEN_DLF},
    {"resb", TOKEN_RESB},
    {"resw", TOKEN_RESW},
    {"resd", TOKEN_RESD},
    {"resq", TOKEN_RESQ},
    {"resf", TOKEN_RESF},
    {"reslf", TOKEN_RESLF},
    {"nop", TOKEN_NOP},
    {"hlt", TOKEN_HALT},
    {"add", TOKEN_ADD},
    {"sub", TOKEN_SUB},
    {"mul", TOKEN_MUL},
    {"div", TOKEN_DIV},
    {"mod", TOKEN_MOD},
    {"iadd", TOKEN_IADD},
    {"isub", TOKEN_ISUB},
    {"imul", TOKEN_IMUL},
    {"idiv", TOKEN_IDIV},
    {"imod", TOKEN_IMOD},
    {"fadd", TOKEN_FADD},
    {"fsub", TOKEN_FSUB},
    {"fmul", TOKEN_FMUL},
    {"fdiv", TOKEN_FDIV},
    {"fadd32", TOKEN_FADD32},
    {"fsub32", TOKEN_FSUB32},
    {"fmul32", TOKEN_FMUL32},
    {"fdiv32", TOKEN_FDIV32},
    {"and", TOKEN_AND},
    {"or", TOKEN_OR},
    {"xor", TOKEN_XOR},
    {"shl", TOKEN_SHL},
    {"shr", TOKEN_SHR},
    {"cmp", TOKEN_CMP},
    {"ret", TOKEN_RET},
    {"retnz", TOKEN_RETNZ},
    {"retz", TOKEN_RETZ},
    {"retne", TOKEN_RETNE},
    {"rete", TOKEN_RETE},
    {"retnc", TOKEN_RETNC},
    {"retc", TOKEN_RETC},
    {"retno", TOKEN_RETNO},
    {"retnn", TOKEN_RETNN},
    {"retn", TOKEN_RETN},
    {"retng", TOKEN_RETNG},
    {"retg", TOKEN_RETG},
    {"retns", TOKEN_RETNS},
    {"rets", TOKEN_RETS},
    {"retge", TOKEN_RETGE},
    {"retse", TOKEN_RETSE},
    {"pusha", TOKEN_PUSHA},
    {"popa", TOKEN_POPA},
    {"outr", TOKEN_OUTR},
    {"uoutr", TOKEN_UOUTR},
    {"cflags", TOKEN_CFLAGS},
    {"reset", TOKEN_RESET},
    {"inc", TOKEN_INC},
    {"dec", TOKEN_DEC},
    {"not", TOKEN_NOT},
    {"mov", TOKEN_MOV},
    {"movb", TOKEN_MOVB},
    {"movw", TOKEN_MOVW},
    {"movd", TOKEN_MOVD},
    {"movq", TOKEN_MOVQ},
    {"movf", TOKEN_MOVF},
    {"movf32", TOKEN_MOVF32},
    {"movsxb", TOKEN_MOVSXB},
    {"movsxw", TOKEN_MOVSXW},
    {"movsxd", TOKEN_MOVSXD},
    {"excgb", TOKEN_EXCGB},
    {"excgw", TOKEN_EXCGW},
    {"excgd", TOKEN_EXCGD},
    {"excgq", TOKEN_EXCGQ},
    {"moveb", TOKEN_MOVEB},
    {"movew", TOKEN_MOVEW},
    {"moved", TOKEN_MOVED},
    {"moveq", TOKEN_MOVEQ},
    {"movnz", TOKEN_MOVNZ},
    {"movz", TOKEN_MOVZ},
    {"movne", TOKEN_MOVNE},
    {"move", TOKEN_MOVE},
    {"movnc", TOKEN_MOVNC},
    {"movc", TOKEN_MOVC},
    {"movno", TOKEN_MOVNO},
    {"movo", TOKEN_MOVO},
    {"movnn", TOKEN_MOVNN},
    {"movn", TOKEN_MOVN},
    {"movng", TOKEN_MOVNG},
    {"movg", TOKEN_MOVG},
    {"movns", TOKEN_MOVNS},
    {"movs", TOKEN_MOVS},
    {"movge", TOKEN_MOVGE},
    {"movse", TOKEN_MOVSE},
    {"jnz", TOKEN_JNZ},
    {"jz", TOKEN_JZ},
    {"jne", TOKEN_JNE},
    {"je", TOKEN_JE},
    {"jnc", TOKEN_JNC},
    {"jc", TOKEN_JC},
    {"jno", TOKEN_JNO},
    {"jo", TOKEN_JO},
    {"jnn", TOKEN_JNN},
    {"jn", TOKEN_JN},
    {"jng", TOKEN_JNG},
    {"jg", TOKEN_JG},
    {"jns", TOKEN_JNS},
    {"js", TOKEN_JS},
    {"jge", TOKEN_JGE},
    {"jse", TOKEN_JSE},
    {"int", TOKEN_INT},
    {"jmp", TOKEN_JMP},
    {"call", TOKEN_CALL},
    {"pushb", TOKEN_PUSHB},
    {"pushw", TOKEN_PUSHW},
    {"pushd", TOKEN_PUSHD},
    {"pushq", TOKEN_PUSHQ},
    {"push", TOKEN_PUSH},
    {"popb", TOKEN_POPB},
    {"popw", TOKEN_POPW},
    {"popd", TOKEN_POPD},
    {"popq", TOKEN_POPQ},
    {"loop", TOKEN_LOOP},
    {"loadsb", TOKEN_LOADSB},
    {"loadsw", TOKEN_LOADSW},
    {"loadsd", TOKEN_LOADSD},
    {"loadsq", TOKEN_LOADSQ},
    {"storesb", TOKEN_STORESB},
    {"storesw", TOKEN_STORESW},
    {"storesd", TOKEN_STORESD},
    {"storesq", TOKEN_STORESQ},
    {"fcmp", TOKEN_FCMP},
    {"fcmp32", TOKEN_FCMP32},
    {"cin", TOKEN_CIN},
    {"cout", TOKEN_COUT},
    {"sin", TOKEN_SIN},
    {"sout", TOKEN_SOUT},
    {"in", TOKEN_IN},
    {"out", TOKEN_OUT},
    {"inw", TOKEN_INW},
    {"outw", TOKEN_OUTW},
    {"ind", TOKEN_IND},
    {"outd", TOKEN_OUTD},
    {"inq", TOKEN_INQ},
    {"outq", TOKEN_OUTQ},
    {"uin", TOKEN_UIN},
    {"uout", TOKEN_UOUT},
    {"uinw", TOKEN_UINW},
    {"uoutw", TOKEN_UOUTW},
    {"uind", TOKEN_UIND},
    {"uoutd", TOKEN_UOUTD},
    {"uinq", TOKEN_UINQ},
    {"uoutq", TOKEN_UOUTQ},
    {"inf", TOKEN_INF},
    {"outf", TOKEN_OUTF},
    {"inf32", TOKEN_INF32},
    {"outf32", TOKEN_OUTF32},
    {"loadb", TOKEN_LOADB},
    {"loadw", TOKEN_LOADW},
    {"loadd", TOKEN_LOADD},
    {"loadq", TOKEN_LOADQ},
    {"storeb", TOKEN_STOREB},
    {"storew", TOKEN_STOREW},
    {"stored", TOKEN_STORED},
    {"storeq", TOKEN_STOREQ},
    {"whdlr", TOKEN_WHDLR},
    {"lea", TOKEN_LEA},
    {"cmpxchg", TOKEN_CMPXCHG},
    {"atm", TOKEN_ATM}};

std::pair<bool, token_t> belongs_to_keymap(std::string name);
}; // namespace masm

#endif
